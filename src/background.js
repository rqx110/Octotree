!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=24)}({24:function(e,t,n){"use strict";n.r(t);var o=n(3);var r=globalThis.chrome&&new function e(t){return new Proxy(t,{get:(t,n)=>"function"!=typeof t[n]?new e(t[n]):(...e)=>new Promise((o,r)=>{t[n](...e,e=>{chrome.runtime.lastError?r(new Error(chrome.runtime.lastError.message)):o(e)})})})}(globalThis.chrome);const s=/^(https?|wss?|file|ftp|\*):\/\/(\*|\*\.[^*/]+|[^*/]+)\/.*$|^file:\/\/\/.*$|^resource:\/\/(\*|\*\.[^*/]+|[^*/]+)\/.*$|^about:/,i="object"==typeof navigator&&navigator.userAgent.includes("Firefox/"),a=i?/^(https?|wss?):[/][/][^/]+([/].*)?$/:/^https?:[/][/][^/]+([/].*)?$/,c=/^(https?|file|ftp):[/]+/;function l(...e){return 0===e.length?/$./:e.includes("<all_urls>")?c:e.includes("*://*/*")?a:new RegExp(e.map(e=>function(e){if(!s.test(e))throw new Error(e+" is an invalid pattern, it must match "+String(s));let[,t,n,o]=e.split(/(^[^:]+:[/][/])([^/]+)?/);return t=t.replace("*",i?"(https?|wss?)":"https?").replace(/[/]/g,"[/]"),n=(null!=n?n:"").replace(/^[*][.]/,"([^/]+.)*").replace(/^[*]$/,"[^/]+").replace(/[.]/g,"[.]").replace(/[*]$/g,"[^.]+"),o=o.replace(/[/]/g,"[/]").replace(/[.]/g,"[.]").replace(/[*]/g,".*"),"^"+t+n+"("+o+")?$"}(e)).join("|"))}const u="object"==typeof chrome&&"webNavigation"in chrome;function d(){return function(e){var t,n,o;const r={origins:[],permissions:[]},s=new Set([...null!==(t=e.permissions)&&void 0!==t?t:[],...(null!==(n=e.content_scripts)&&void 0!==n?n:[]).flatMap(e=>{var t;return null!==(t=e.matches)&&void 0!==t?t:[]})]);e.devtools_page&&!(null===(o=e.optional_permissions)||void 0===o?void 0:o.includes("devtools"))&&s.add("devtools");for(const e of s)e.includes("://")?r.origins.push(e):r.permissions.push(e);return r}(chrome.runtime.getManifest())}const m=/:[/][/][*.]*([^/]+)/;function f(e){return e.split(m)[1]}function p(e,t,{strictOrigins:n=!0}={}){var o,r;const s={origins:[],permissions:[]};for(const r of null!==(o=t.origins)&&void 0!==o?o:[])if(!e.origins.includes(r)){if(!n){const t=f(r);if(e.origins.some(e=>f(e)===t))continue}s.origins.push(r)}for(const n of null!==(r=t.permissions)&&void 0!==r?r:[])e.permissions.includes(n)||s.permissions.push(n);return s}var h,g,w;const b=new Map,y=null!==(w=null===(g=null===(h=null===globalThis||void 0===globalThis?void 0:globalThis.browser)||void 0===h?void 0:h.contentScripts)||void 0===g?void 0:g.register)&&void 0!==w?w:async function(e,t){const{js:n=[],css:o=[],matchAboutBlank:s,matches:i,excludeMatches:a,runAt:c}=e;let{allFrames:d}=e;u?d=!1:d&&console.warn("`allFrames: true` requires the `webNavigation` permission to work correctly: https://github.com/fregante/content-scripts-register-polyfill#permissions");const m=l(...i),f=l(...null!=a?a:[]),p=async(e,t,i)=>{if(!m.test(e)||f.test(e)||!await async function(e){return r.permissions.contains({origins:[new URL(e).origin+"/*"]})}(e)||await async function(e,t,n){const o=await r.tabs.executeScript(e,{frameId:t,code:`(${(e=>{const t=document[e];return document[e]=!0,t}).toString()})(${JSON.stringify(n)})`});return null==o?void 0:o[0]}(t,i,{js:n,css:o}))return;for(const e of o)chrome.tabs.insertCSS(t,{...e,matchAboutBlank:s,allFrames:d,frameId:i,runAt:null!=c?c:"document_start"});let a;for(const e of n)"code"in e&&await a,a=r.tabs.executeScript(t,{...e,matchAboutBlank:s,allFrames:d,frameId:i,runAt:c})},h=async(e,{status:t},{url:n})=>{t&&n&&p(n,e)},g=async({tabId:e,frameId:t,url:n})=>{p(n,e,t)};u?chrome.webNavigation.onCommitted.addListener(g):chrome.tabs.onUpdated.addListener(h);const w={async unregister(){u?chrome.webNavigation.onCommitted.removeListener(g):chrome.tabs.onUpdated.removeListener(h)}};return"function"==typeof t&&t(w),w};function v(e){return{file:new URL(e,location.origin).pathname}}function x(e,t){for(const n of t){for(const t of n.css||[])chrome.tabs.insertCSS(e,{file:t,allFrames:n.all_frames});for(const t of n.js||[])chrome.tabs.executeScript(e,{file:t,allFrames:n.all_frames})}}async function S({origins:e}){const t=chrome.runtime.getManifest().content_scripts;if(!t)throw new Error("webext-dynamic-content-scripts tried to register scripts on th new host permissions, but no content scripts were found in the manifest.");for(const n of e||[])for(const e of t){const t=y({js:(e.js||[]).map(e=>v(e)),css:(e.css||[]).map(e=>v(e)),allFrames:e.all_frames,matches:[n],excludeMatches:e.matches,runAt:e.run_at});b.set(n,t)}var n,o;n=e||[],o=t,chrome.tabs.query({url:n},e=>{for(const t of e)t.id&&x(t.id,o)})}(async()=>{S(await async function(e){return new Promise(t=>{chrome.permissions.getAll(n=>{const o=d();t(p(o,n,e))})})}({strictOrigins:!1}))})(),chrome.permissions.onAdded.addListener(e=>{e.origins&&e.origins.length>0&&S(e)}),chrome.permissions.onRemoved.addListener(async({origins:e})=>{if(e&&0!==e.length)for(const[t,n]of b)e.includes(t)&&(await n).unregister()});var _="object"==typeof window&&(window.browser||new function e(t){return new Proxy(t,{get:(t,n)=>"function"!=typeof t[n]?new e(t[n]):(...e)=>new Promise((o,r)=>{t[n](...e,e=>{chrome.runtime.lastError?r(new Error(chrome.runtime.lastError.message)):o(e)})})})}(window.chrome));const E="object"==typeof chrome&&chrome&&"object"==typeof chrome.extension,j="object"==typeof window?window:void 0;"object"==typeof location&&location.protocol.startsWith("http");const M="object"==typeof navigator&&navigator.userAgent.includes("Firefox/"),k="webext-domain-permission-toggle:add-permission";let L;async function O(e,t,...n){return _.tabs.executeScript(e,{code:`(${t.toString()})(...${JSON.stringify(n)})`})}async function $(e){if(M){const[t]=await O(e,()=>location.href);return t}return(await _.tabs.get(e)).url}async function T(e){const t={checked:!1,enabled:!0};if(e){const n=new URL(e).origin,o=l(...d().origins).test(n);t.enabled=!o,t.checked=o||await async function(e){return _.permissions.contains({origins:[e+"/*"]})}(n)}chrome.contextMenus.update(k,t)}async function A({tabId:e}){T(await $(e).catch(()=>""))}async function P({checked:e,menuItemId:t},n){if(t===k)try{await async function(e,t){const n="The browser didn't supply any information about the active tab.";if(!e.url&&t)throw new Error("Please try again. "+n);if(!e.url&&!t)throw new Error("Couldn't disable the extension on the current tab. "+n);const o={origins:[new URL(e.url).origin+"/*"]};if(!t)return void _.permissions.remove(o);await _.permissions.request(o)?L.reloadOnSuccess&&O(e.id,e=>{confirm(e)&&location.reload()},L.reloadOnSuccess):chrome.contextMenus.update(k,{checked:!1})}(n,e)}catch(e){if(null==n?void 0:n.id){try{await O(n.id,"alert",String(e instanceof Error?e:new Error(e.message)))}catch(t){alert(e)}T()}throw e}}browser.runtime.onMessage.addListener((e,t,n)=>{if(e.eventName===o.a.SEND_REQUEST)return Object(o.b)(e,n),!0;n()}),browser.runtime.setUninstallURL("https://www.octotree.io/feedback"),function(e){if(!function(){var e,t;return E&&("/_generated_background_page.html"===location.pathname||(null===(t=null===(e=chrome.extension)||void 0===e?void 0:e.getBackgroundPage)||void 0===t?void 0:t.call(e))===j)}())throw new Error("webext-domain-permission-toggle can only be called from a background page");if(L)throw new Error("webext-domain-permission-toggle can only be initialized once");const{name:t,optional_permissions:n}=chrome.runtime.getManifest();if(L={title:`Enable ${t} on this domain`,reloadOnSuccess:`Do you want to reload this page to apply ${t}?`,...e},!chrome.contextMenus)throw new Error("webext-domain-permission-toggle requires the `contextMenu` permission");const o=null==n?void 0:n.filter(e=>/<all_urls>|\*/.test(e));if(!o||0===o.length)throw new TypeError("webext-domain-permission-toggle some wildcard hosts to be specified in `optional_permissions`");chrome.contextMenus.remove(k,()=>chrome.runtime.lastError),chrome.contextMenus.create({id:k,type:"checkbox",checked:!1,title:L.title,contexts:["page_action","browser_action"],documentUrlPatterns:o}),chrome.contextMenus.onClicked.addListener(P),chrome.tabs.onActivated.addListener(A),chrome.tabs.onUpdated.addListener(async(e,{status:t},{url:n,active:o})=>{o&&"complete"===t&&T(null!=n?n:await $(e).catch(()=>""))})}()},3:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return r}));const o={SEND_REQUEST:"octotree_send_request"};async function r({method:e,path:t,body:n,token:o},r){try{const s={"Content-Type":"application/json"};o&&(s.Authorization="Bearer "+o);const i=await fetch("https://www.octotree.io/api/v1.0/"+t.replace(/^\//,""),{headers:s,body:n,method:e}),a=i.headers.get("Content-Type");let c;if(c=/application\/json/i.test(a)?await i.json():await i.text(),!i.ok){const e=new Error(c.message||c.statusText||c);throw e.statusCode=i.status,e}r({responseBody:c,responseStatus:i.status})}catch(e){r({message:e.message,statusCode:e.statusCode})}}}});